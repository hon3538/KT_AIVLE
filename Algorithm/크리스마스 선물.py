'''
달콤함을 가장 크게 느낄 수 있는 경우는?
시간이 갈수록 달콤함이 줄어드는 것을 빨리먹고 늘어나는 것을 최대한
한 늦게 먹기

초콜릿 수 <= 1000

각 자를 위치 경우 1000
경우마다 초콜릿들의 달콤함 계산 1000
100만..

위치를 고르고 잘랐을 때 양 옆의 초콜릿중 어느것을 먹을 것인가?
당장 두 초콜릿만 비교해서 먹기엔 뒤쪽의 폭탄들을 키우고 있을 수 있다.
ex) 
첫번쨰줄 -10 -10 -20 -10..
두번째줄 10 -2000 -1000 -3000
위 예시에서 두번쨰줄의 처음이 10이라서 첫번째줄 초콜릿만 우선적으로 먹을텐데
시간이 지날수록 두번째줄의 달콤함이 크게크게 줄어들고 있어서 손해이다.

따라서, 양쪽의 초콜릿 달콤함을 미리 계산해야 한다.
ex)
첫번째는 -10 + 2*(-10) + 3*(-20) + ...
두번쨰는 10 + 2*(-2000) + 3*(-1000) + ...

또한, 하나를 먹었을 때 양쪽의 초콜릿 개수가 맞지 않는 문제가 생긴다.
따라서 초콜릿을 먹을 때마다 다른 초콜릿들은 자신에게 도달할 수 있는 시간을 
고려하여 달콤함을 새로 계산해야한다.
근데, 하나 먹을때마다 N번의 연산이 들면 N개 먹으면 N^2 의 연산이 필요하고
초콜릿 줄을 끊는 경우까지 고려하면 N^3 으로 비효율적이게 된다.

줄을 끊는 최적의 경우를 미리 찾던지,
연산 횟수를 O(1)로 만들던지 개선이 필요하다.

줄을 끊는 최적의 경우를 미리 찾을 수 있을지 고민
최적의 경우란 무엇일까?
양쪽 초콜릿을 번갈아가면서 먹는다고 가정했을 때 달콤함이 최대가 되는 경우를 찾자

-10 -10 -10 -10 -10 100 이 있다고 하면
어딜 자르던지, -10쪽만 먹으면 최대가 된다.
따라서 계산의 간편함을 위해 반반의 경우를 생각하자 
반잘랐을때 시간 곱하여 계산한 달콤함을 각각 더해서 최대가 되는 경우에 줄을 끊자
그리고 양쪽 중 달콤함이 더 적은 초콜릿부터 먼저 먹어주자...
어떻게 나눠도 한 쪽만 연속적으로 먹어야하는 상황이 있을까..?
첫째 10 10 10 5000
둘쨰 -10 -10 -10 5000 
이라면,, 둘쨰 다먹고 첫째 먹는게 이득아녀? 하.. 반례 등장
그러면 이렇게 나누고 비교해서 더 적은쪽을 먹는다면?

첫째 10 10 10 5000
둘째 100 -5000 50000
.. -5000을 맨앞에 두면 해결되지 않느냐?
첫째 100 10 10 10
둘째 -5000 50000 5000.. 처음 나누는 조건에 안 맞음
반반 나누는 것 불가


'''