'''
가영은 강아지를 키우고 있습니다. 
가영은 강아지를 잃어버릴 것에 대비해서 목줄에 위치 추적기를 만들고 싶습니다.

위치 추적기는 강아지가 달리는 방향을 감지하고 그렇게 얼마나 이동했는지 알 수 있습니다.
다시 말해서 움직인 방향과 이동한 거리를 가영이의 집 서버로 보냅니다. 

위치 추적기는 북쪽을 1, 동쪽을 2, 남쪽을 3, 서쪽을 4로 저장합니다.
그리고 이동한 거리는 임의의 자연수로 저장합니다. 

가영의 강아지가 좌표평면 상에 있다고 해봅시다. 
여기서 y축 방향은 북쪽, x축 방향은 동쪽입니다. 

만약 가영의 강아지가 (0, 0), (0, 5), (3, 5)로 움직였다면
위치 추적기는 (2, 5), (1, 3)을 가영이의 개인 서버로 보내야 합니다. 
여기서 가영의 강아지는 좌표축과 평행하게만 이동한다고 가정하겠습니다. 

가영의 강아지가 움직인 위치가 주어집니다.
그에 따른 위치 추적기가 가영이의 서버로 보내야 할 데이터를 만들어 주세요. 

[입력]
첫 번째 줄에 가영의 강아지가 이동한 횟수 N이 주어집니다. (1 ≤ N ≤ 50)
두 번째 줄부터 N개의 줄에 걸쳐 가영의 강아지의 위치가 "A B"꼴로 주어집니다.
A는 좌표평면의 y좌표를 의미하고, B는 x좌표를 의미합니다. (-100 ≤ A, B ≤ 100)

가영의 강아지는 항상 좌표축과 평행하게 이동하고, 1 이상의 거리를 이동합니다.

[출력]
(N-1)개의 줄에 걸쳐 위치 추적기가 가영의 서버로 보내야 할 데이터를 "D X"꼴로 출력합니다.
여기서 D는 방향, X는 이동한 거리를 의미합니다. (1 ≤ D ≤ 4, 1 ≤ X)
'''
'''
[설계]
다음 위치와의 차이를 통해 방향과 이동거리를 계산한다.
'''

def get_info(cur, next):
    dy = next[0] - cur[0]
    dx = next[1] - cur[1]

    result = [0, 0]  # 방향, 이동거리
    if dx < 0:  # 서쪽
        result=[4, -dx]
    elif dx > 0:  # 동쪽
        result=[2, dx]
    elif dy < 0:  # 남쪽
        result=[3, -dy]
    else:  # 북쪽
        result=[1, dy]
    
    return result

N = int(input())  # 이동 횟수
ans = []

now = tuple(map(int, input().split()))
for _ in range(N-1):
    next = tuple(map(int, input().split()))
    ans.append(get_info(now, next))
    now = next

for info in ans:
    print(info[0], info[1])